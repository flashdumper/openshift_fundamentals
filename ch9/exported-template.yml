apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: exported-template
objects:
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: example-template
      role: web
    name: example-route
  spec:
    host: example-route-myproject.192.168.99.100.nip.io
    to:
      kind: Service
      name: example-svc
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-07-09T04:36:27Z
        status: "True"
        type: Admitted
      host: example-route-myproject.192.168.99.100.nip.io
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/scc: anyuid
    creationTimestamp: null
    labels:
      app: example-template
      role: web
    name: example-pod
  spec:
    containers:
    - image: httpd
      imagePullPolicy: Always
      name: httpd
      resources: {}
      securityContext:
        capabilities:
          drop:
          - MKNOD
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p7lgb
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-6tq4x
    nodeName: localhost
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seLinuxOptions:
        level: s0:c8,c7
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-p7lgb
      secret:
        defaultMode: 420
        secretName: default-token-p7lgb
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: example-template
      role: web
    name: example-svc
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      role: web
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
